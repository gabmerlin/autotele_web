================================================================================
  MIGRATION SQL - Ajouter plan_id à subscriptions
  À copier-coller dans Supabase → SQL Editor
================================================================================

-- 1️⃣ BACKUP (Recommandé)
CREATE TABLE IF NOT EXISTS subscriptions_backup_20251018 AS 
SELECT * FROM public.subscriptions;

-- 2️⃣ AJOUTER COLONNE plan_id
ALTER TABLE public.subscriptions 
ADD COLUMN IF NOT EXISTS plan_id uuid NULL;

-- 3️⃣ AJOUTER CONTRAINTE DE CLÉ ÉTRANGÈRE
DO $$ 
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM pg_constraint 
        WHERE conname = 'subscriptions_plan_id_fkey'
    ) THEN
        ALTER TABLE public.subscriptions 
        ADD CONSTRAINT subscriptions_plan_id_fkey 
        FOREIGN KEY (plan_id) 
        REFERENCES public.plans (id) 
        ON DELETE SET NULL;
    END IF;
END $$;

-- 4️⃣ CRÉER INDEX
CREATE INDEX IF NOT EXISTS idx_subscriptions_plan_id 
ON public.subscriptions 
USING btree (plan_id);

-- 5️⃣ RENDRE expires_at NULLABLE (pour Lifetime)
ALTER TABLE public.subscriptions 
ALTER COLUMN expires_at DROP NOT NULL;

-- 6️⃣ METTRE À JOUR DONNÉES EXISTANTES
UPDATE public.subscriptions s
SET plan_id = bi.plan_id
FROM public.btcpay_invoices bi
WHERE s.invoice_id = bi.invoice_id
AND s.plan_id IS NULL;

-- ✅ VÉRIFICATION
SELECT 
  s.id,
  u.email,
  s.plan_id,
  p.name as plan_name,
  p.price_usd,
  s.status,
  s.expires_at,
  s.created_at
FROM public.subscriptions s
LEFT JOIN auth.users u ON s.user_id = u.id
LEFT JOIN public.plans p ON s.plan_id = p.id
ORDER BY s.created_at DESC
LIMIT 10;

================================================================================
  ✅ MIGRATION TERMINÉE !
  Vérifiez que plan_id est bien rempli dans les résultats ci-dessus
================================================================================

